// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from yaml-test.djinni

package com.dropbox.djinni.test;

import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class ReverseClientInterface {
    public abstract String returnStr();

    public abstract String methTakingInterface(ReverseClientInterface i);

    public abstract String methTakingOptionalInterface(ReverseClientInterface i);

    public abstract ArrayList<ClientReturnedRecord> methTakingAndReturningRecordList(ArrayList<ClientReturnedRecord> rl);

    public static native ReverseClientInterface create();

    private static final class CppProxy extends ReverseClientInterface
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public String returnStr()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_returnStr(this.nativeRef);
        }
        private native String native_returnStr(long _nativeRef);

        @Override
        public String methTakingInterface(ReverseClientInterface i)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_methTakingInterface(this.nativeRef, i);
        }
        private native String native_methTakingInterface(long _nativeRef, ReverseClientInterface i);

        @Override
        public String methTakingOptionalInterface(ReverseClientInterface i)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_methTakingOptionalInterface(this.nativeRef, i);
        }
        private native String native_methTakingOptionalInterface(long _nativeRef, ReverseClientInterface i);

        @Override
        public ArrayList<ClientReturnedRecord> methTakingAndReturningRecordList(ArrayList<ClientReturnedRecord> rl)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_methTakingAndReturningRecordList(this.nativeRef, rl);
        }
        private native ArrayList<ClientReturnedRecord> native_methTakingAndReturningRecordList(long _nativeRef, ArrayList<ClientReturnedRecord> rl);
    }
}
