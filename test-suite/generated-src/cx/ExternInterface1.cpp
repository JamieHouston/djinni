// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from yaml-test.djinni

#include "ExternInterface1.h"  // my header
#include "ClientInterface.h"
#include "DBClientReturnedRecord.h"
#include "translation.h"

namespace testsuite {

::testsuite::DBClientReturnedRecord ExternInterface1::Foo (::testsuite::IClientInterface^ I)
{
    try {
        auto cppRet = _cppRef->foo(transform<std::shared_ptr<::testsuite::ClientInterface>, ::testsuite::IClientInterface^>()(I));
        return transform<::testsuite::ClientReturnedRecord, ::testsuite::DBClientReturnedRecord>()(cppRet);
    }
    catch(const std::exception& e) {
        throw ref new Platform::Exception(-1, transform<std::string, Platform::String^>()((std::string)e.what()));
    }
}
::testsuite::DBClientReturnedRecord ExternInterface1::MethTakingRecordList (Windows::Foundation::Collections::IVector<::testsuite::DBClientReturnedRecord>^ Lr)
{
    try {
        auto cppRet = _cppRef->meth_taking_record_list(transform<std::vector<::testsuite::ClientReturnedRecord>, Windows::Foundation::Collections::IVector<::testsuite::DBClientReturnedRecord>^>()(Lr));
        return transform<::testsuite::ClientReturnedRecord, ::testsuite::DBClientReturnedRecord>()(cppRet);
    }
    catch(const std::exception& e) {
        throw ref new Platform::Exception(-1, transform<std::string, Platform::String^>()((std::string)e.what()));
    }
}
Windows::Foundation::Collections::IVector<::testsuite::DBClientReturnedRecord>^ ExternInterface1::MethReturningRecordList (::testsuite::DBClientReturnedRecord R)
{
    try {
        auto cppRet = _cppRef->meth_returning_record_list(transform<::testsuite::ClientReturnedRecord, ::testsuite::DBClientReturnedRecord>()(R));
        return transform<std::vector<::testsuite::ClientReturnedRecord>, Windows::Foundation::Collections::IVector<::testsuite::DBClientReturnedRecord>^>()(cppRet);
    }
    catch(const std::exception& e) {
        throw ref new Platform::Exception(-1, transform<std::string, Platform::String^>()((std::string)e.what()));
    }
}

}  // namespace testsuite
