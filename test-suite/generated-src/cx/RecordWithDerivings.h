// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from derivings.djinni

#pragma once

#include "record_with_derivings.hpp"

namespace testsuite {

public ref class RecordWithDerivings sealed : public Platform::Object {
public:
    property uint8_t Eight;
    property int16_t Sixteen;
    property int32_t Thirtytwo;
    property int64_t Sixtyfour;
    property float Fthirtytwo;
    property double Fsixtyfour;
    property Windows::Foundation::DateTime^ D;
    property Platform::String^ S;

    RecordWithDerivings(uint8_t Eight,
                        int16_t Sixteen,
                        int32_t Thirtytwo,
                        int64_t Sixtyfour,
                        float Fthirtytwo,
                        double Fsixtyfour,
                        Windows::Foundation::DateTime^ D,
                        Platform::String^ S) {
        this->Eight = Eight;
        this->Sixteen = Sixteen;
        this->Thirtytwo = Thirtytwo;
        this->Sixtyfour = Sixtyfour;
        this->Fthirtytwo = Fthirtytwo;
        this->Fsixtyfour = Fsixtyfour;
        this->D = D;
        this->S = S;
    }
    RecordWithDerivings() {}
internal:
    ::testsuite::RecordWithDerivings toCpp();
    static RecordWithDerivings^ fromCpp(const ::testsuite::RecordWithDerivings& value);

    bool Equals(RecordWithDerivings^ rhs);

    int32 CompareTo(RecordWithDerivings^ rhs);
};

}  // namespace testsuite
