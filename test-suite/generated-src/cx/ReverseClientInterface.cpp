// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client_interface.djinni

#include "ReverseClientInterface.h"  // my header
#include "translation.h"

namespace testsuite {

Platform::String^ ReverseClientInterface::ReturnStr ()
{
    try {
        auto cppRet = _cppRef->return_str();
        return transform<std::string, Platform::String^>()(cppRet);
    }
    catch(const std::exception& e) {
        throw ref new Platform::Exception(-1, transform<std::string, Platform::String^>()((std::string)e.what()));
    }
}
Platform::String^ ReverseClientInterface::MethTakingInterface (IReverseClientInterface^ I)
{
    try {
        auto cppRet = _cppRef->meth_taking_interface(transform<std::shared_ptr<::testsuite::ReverseClientInterface>, ::testsuite::IReverseClientInterface^>()(I));
        return transform<std::string, Platform::String^>()(cppRet);
    }
    catch(const std::exception& e) {
        throw ref new Platform::Exception(-1, transform<std::string, Platform::String^>()((std::string)e.what()));
    }
}
Platform::String^ ReverseClientInterface::MethTakingOptionalInterface (Platform::IBox<IReverseClientInterface>^ I)
{
    try {
        auto cppRet = _cppRef->meth_taking_optional_interface(transform<std::shared_ptr<::testsuite::ReverseClientInterface>, Platform::IBox<::testsuite::IReverseClientInterface>^>()(I));
        return transform<std::string, Platform::String^>()(cppRet);
    }
    catch(const std::exception& e) {
        throw ref new Platform::Exception(-1, transform<std::string, Platform::String^>()((std::string)e.what()));
    }
}
IReverseClientInterface^ ReverseClientInterface::Create ()
{
    try {
        auto cppRet = ::testsuite::ReverseClientInterface::create();
        return transform<std::shared_ptr<::testsuite::ReverseClientInterface>, ::testsuite::IReverseClientInterface^>()(cppRet);
    }
    catch(const std::exception& e) {
        throw ref new Platform::Exception(-1, transform<std::string, Platform::String^>()((std::string)e.what()));
    }
}

}  // namespace testsuite
